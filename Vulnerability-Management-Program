# Vulnerability Management Program Implementation

In this project, I simulate the implementation of a comprehensive vulnerability management program, from inception to completion.

_**Inception State:**_ the organization has no existing policy or vulnerability management practices in place.

_**Completion State:**_ a formal policy is enacted, stakeholder buy-in is secured, and a full cycle of organization-wide vulnerability remediation is successfully completed.

---

<img width="1000" alt="image" src="https://github.com/user-attachments/assets/cfc5dbcf-3fcb-4a71-9c13-2a49f8bab3e6">

# Technology Utilized
- Tenable (enterprise vulnerability management platform)
- Azure Virtual Machines (Nessus scan engine + scan targets)
- PowerShell & BASH (remediation scripts)

---


# Table of Contents

- [Vulnerability Management Policy Draft Creation](#vulnerability-management-policy-draft-creation)
- [Mock Meeting: Policy Buy-In (Stakeholders)](#step-2-mock-meeting-policy-buy-in-stakeholders)
- [Policy Finalization and Senior Leadership Sign-Off](#step-3-policy-finalization-and-senior-leadership-sign-off)
- [Mock Meeting: Initial Scan Permission (Server Team)](#step-4-mock-meeting-initial-scan-permission-server-team)
- [Initial Scan of Server Team Assets](#step-5-initial-scan-of-server-team-assets)
- [Vulnerability Assessment and Prioritization](#step-6-vulnerability-assessment-and-prioritization)
- [Distributing Remediations to Remediation Teams](#step-7-distributing-remediations-to-remediation-teams)
- [Mock Meeting: Post-Initial Discovery Scan (Server Team)](#step-8-mock-meeting-post-initial-discovery-scan-server-team)
- [Mock CAB Meeting: Implementing Remediations](#step-9-mock-cab-meeting-implementing-remediations)
- [Remediation Round 1: Outdated Wireshark Removal](#remediation-round-1-outdated-wireshark-removal)
- [Remediation Round 2: Insecure Protocols & Ciphers](#remediation-round-2-insecure-protocols--ciphers)
- [Remediation Round 3: Guest Account Group Membership](#remediation-round-3-guest-account-group-membership)
- [Remediation Round 4: Windows OS Updates](#remediation-round-4-windows-os-updates)
- [First Cycle Remediation Effort Summary](#first-cycle-remediation-effort-summary)

---

### Vulnerability Management Policy Draft Creation

This phase focuses on drafting a Vulnerability Management Policy as a starting point for stakeholder engagement. The initial draft outlines scope, responsibilities, and remediation timelines, and may be adjusted based on feedback from relevant departments to ensure practical implementation before final approval by upper management.  
[Draft Policy](https://docs.google.com/document/d/1t9cOCEJW7W-cpUxo2oriesqaq1Yv6qbQXCULnQc7GLc/edit?usp=sharing)

---

### Step 2) Mock Meeting: Policy Buy-In (Stakeholders)

In this phase, a meeting with the server team introduces the draft Vulnerability Management Policy and assesses their capability to meet remediation timelines. Feedback leads to adjustments, like extending the critical remediation window from 48 hours to one week, ensuring collaborative implementation.

#### Conversation Between Jimmy (Server Team Manager) and Neal (VM Security Analyst)

**Neal (VM Security Analyst):**  
Hey, good morning Jimmy. How’s everything been lately? I know everyone’s been really busy these past few weeks.

**Jimmy (Server Team Manager):**  
Good morning, Neal. Yeah, it’s been a bit hectic, but we’re hanging in there. Thanks for asking.  
I had a chance to read through the policy draft, and overall, it makes sense. However, with our current staffing, we can’t meet the aggressive remediation timelines—especially the 48-hour window for critical vulnerabilities.

**Neal (VM Security Analyst):**  
I totally understand. It is a bit aggressive, especially at the start.  
Perhaps we can extend the timeline for critical issues to one week as a temporary compromise. Then we can reserve the 48-hour window for truly severe, zero-day vulnerabilities.

**Jimmy (Server Team Manager):**  
That sounds reasonable. We really appreciate the flexibility.  
Would it also be possible to have some leeway in the beginning as we get used to the remediation and patching process—just for the first few months?

**Neal (VM Security Analyst):**  
Absolutely. Once the policy is finalized, we’ll officially start the program, but we're planning to give all departments about six months to adjust and get comfortable with the new process. Does that sound fair?

**Jimmy (Server Team Manager):**  
It does. Thanks, Neal. We’ll do our best. I appreciate you including us in the decision-making process—it really helps to feel like we’re part of the solution.

**Neal (VM Security Analyst):**  
Of course—we’re all in this together. Thanks for working with us.

**Jimmy (Server Team Manager):**  
No problem. Thanks for the quick meeting.

**Neal (VM Security Analyst):**  
Yeah, those are my favorite kind. Bye for now!

**Jimmy (Server Team Manager):**  
See you later.


---

### Step 3) Policy Finalization and Senior Leadership Sign-Off

After gathering feedback from the server team, the policy is revised, addressing aggressive remediation timelines. With final approval from upper management, the policy now guides the program, ensuring compliance and reference for pushback resolution.  
[Finalized Policy](https://docs.google.com/document/d/1A0Ct21u1E91W88OaWSNanmUNh2J9lzojN2QWYVdsy7k/edit?usp=sharing)
<div style="text-align: center;">
    <img src="https://github.com/user-attachments/assets/9afcdbc1-0493-4af2-9287-1cb9b8f59b40" alt="image" width="400">
</div>

---

### Step 4) Mock Meeting: Initial Scan Permission (Server Team)

I collaborate with the server team to initiate scheduled credential scans. A compromise is reached to scan a single server first, monitoring resource impact, and using just-in-time Active Directory credentials for secure, controlled access.  

#### Conversation Between Jimmy (Server Team Manager) and Neal (VM Security Analyst)– Vulnerability Scanning

**Neal (VM Security Analyst):**  
Morning, Jimmy.

**Jimmy (Server Team Manager):**  
Good morning. I heard you’re ready to conduct some scans?

**Neal (VM Security Analyst):**  
Yep! Now that our vulnerability management policy is in place, I wanted to get started on conducting some scheduled credentialed scans of your environment.

**Jimmy (Server Team Manager):**  
Sounds good to me. What’s involved? How can we help?

**Neal (VM Security Analyst):**  
We’re planning to schedule weekly scans of the server infrastructure.  
We estimate it’ll take about 4 to 6 hours to scan all 200 assets.  
We’ll need you to provide us with some administrative credentials, which will allow the scan engine to remotely log into the targets to better assess them.

**Jimmy (Server Team Manager):**  
Whoa, whoa—hold on. What does scanning actually entail?  
I’m a bit worried about resource utilization.  
Also, you want admin credentials to all 200 machines? That doesn’t sound safe.

**Neal (VM Security Analyst):**  
Those are valid concerns.  
The scan engine sends various traffic to the servers to check for known vulnerabilities.  
That includes checking registry entries, detecting outdated software, and identifying insecure protocols or cipher suites.  
That’s why credentials are necessary—to perform those deeper checks.

**Jimmy (Server Team Manager):**  
I see. As long as it doesn’t bring the servers offline, I guess we should be okay.

**Neal (VM Security Analyst):**  
Absolutely. Let’s just scan a single server for now and monitor resource utilization.

**Jimmy (Server Team Manager):**  
Not a bad idea.

**Neal (VM Security Analyst):**  
Great. Also, for the credentials—can you set something up in Active Directory for us?  
Maybe create an account that’s disabled by default. We can enable it during scans and then disable or deprovision it afterward. Kind of like a just-in-time access setup.

**Jimmy (Server Team Manager):**  
That sounds good. I’ll ask Susan to get started on automating the account provisioning.

**Neal (VM Security Analyst):**  
Awesome. Talk soon.

**Jimmy (Server Team Manager):**  
Sounds good. I’ll get back to you once the credentials are set up. See you later.

**Neal (VM Security Analyst):**  
See you later.


---

### Step 5) Initial Scan of Server Team Assets

In this phase, an insecure Windows Server is provisioned to simulate the server team's environment. After creating vulnerabilities, an authenticated scan is performed, and the results are exported for future remediation steps.  

![image](https://github.com/user-attachments/assets/282799e0-4ee9-4ba4-82bb-e5879157914f)

[Scan 1 - Initial Scan](https://drive.google.com/file/d/1Vn_Z00CatJT4zHHCFIVcRqAwYubZsUe5/view?usp=sharing)




---

### Step 6) Vulnerability Assessment and Prioritization

I assessed vulnerabilities and established a remediation prioritization strategy based on ease of remediation and impact. The following priorities were set:

1. Third Party Software Removal (Wireshark)
2. Windows OS Secure Configuration (Protocols & Ciphers)
3. Windows OS Secure Configuration (Guest Account Group Membership)
4. Windows OS Updates

---

### Step 7) Distributing Remediations to Remediation Teams

The server team received remediation scripts and scan reports to address key vulnerabilities. This streamlined their efforts and prepared them for a follow-up review.  

<img width="635" alt="image" src="https://github.com/user-attachments/assets/bbf9478f-e1d1-4898-846e-b510ec8c6f72">

[Remediation Email](https://github.com/joshmadakor1/lognpacific-public/blob/main/misc/remediation-email.md)

---

### Step 8) Mock Meeting: Post-Initial Discovery Scan (Server Team)

The server team reviewed vulnerability scan results, identifying outdated software, insecure accounts, and deprecated protocols. The remediation packages were prepared for submission to the Change Control Board (CAB). 

#### Conversation Between Jimmy and Neal – Vulnerability Findings Review

**Neal (VM Security Analyst):**  
Morning, Jimmy. How are you doing?

**Jimmy (Server Team Manager):**  
Not bad for a Monday. And yourself?

**Neal (VM Security Analyst):**  
I'm still alive, so I can't complain.  
Before we dive into the vulnerabilities, how did the actual scan go on your end? Any outages or resource overutilization?

**Jimmy (Server Team Manager):**  
The scan went well. We were monitoring the systems, and aside from a lot of open connections, we wouldn’t have even known a scan was happening.

**Neal (VM Security Analyst):**  
That's great news—pretty much what I expected.  
We’ll continue monitoring, but I don’t anticipate any resource issues going forward.  
Mind if I go over the vulnerability findings?

**Jimmy (Server Team Manager):**  
Yeah, absolutely—go ahead.

**Neal (VM Security Analyst):**  
I’m going to share my screen really quick.  
So basically, the majority of these vulnerabilities are related to **Wireshark** being installed. You can see a bunch of instances—it’s just really out of date, that’s all.  

One interesting finding: the **local guest account** on some servers actually belongs to the **Local Administrators** group. Not sure why that is.  

Some other findings might be resolved automatically via **Windows Updates**—for example, the **Microsoft Edge Chromium** vulnerability.  
Same with a couple of others—I’m not totally sure, but updates may take care of them.  

We also don’t need to worry too much about the **self-signed certificate** warning—that’s expected on internal systems.  

The bigger issues are:  
- **Medium-strength cipher suites**  
- Use of **TLS 1.0 and 1.1** (deprecated protocols)  
- And that **guest account** being part of an admin group  

So in summary, we’re mainly looking at:  
- Removing or updating **Wireshark**  
- Addressing deprecated **protocols** and **cipher suites**  
- Cleaning up **local user group memberships**

**Jimmy (Server Team Manager):**  
Very interesting. The good news is I suspect most of our servers have the same vulnerabilities, which should make remediation more straightforward.

**Neal (VM Security Analyst):**  
Exactly—uniform environments make life easier.  
Do you foresee any issues with remediating the cipher suites or insecure protocols?

**Jimmy (Server Team Manager):**  
I highly doubt it. We’ll bring it up during the next Change Control Board.  
Uninstalling Wireshark and removing the guest account shouldn’t be an issue—they shouldn’t be on the servers anyway.  
I’ll check with our CIS admins to confirm.

**Neal (VM Security Analyst):**  
Sounds good. I’ll go ahead and start building some remediation packages to help streamline the fixes for your team.

**Jimmy (Server Team Manager):**  
That sounds great. Oh, one question—do you already have something in place to handle the Windows Update-related vulnerabilities? Some sort of patch management?

**Neal (VM Security Analyst):**  
Oh yes, I’m not worried about that.  
Windows Updates should be applied automatically—we have patch management in place and next week’s cycle should take care of those.

**Jimmy (Server Team Manager):**  
Okay, excellent.

**Neal (VM Security Analyst):**  
Alright, I’ll start researching the best remediation approaches and follow up before the next Change Control Board.

**Jimmy (Server Team Manager):**  
Sounds good. Talk to you soon.

**Neal (VM Security Analyst):**  
Cool, talk to you soon.


---

### Step 9) Mock CAB Meeting: Implementing Remediations

The Change Control Board (CAB) reviewed and approved the plan to remove insecure protocols and cipher suites. The plan included a rollback script and a tiered deployment approach.  

#### Change Advisory Board (CAB) Meeting – Vulnerability Remediation Discussion

---

**Johnny (CAB Facilitator):**  
Okay, next up on the list are a couple of vulnerability remediations for the server team:  
1. Removal of insecure protocols  
2. Removal of insecure cipher suites  

It looks like Neal from the VM team is working in conjunction with Jimmy from Infrastructure.  
Jimmy, do you want to walk us through the technical aspects of the change being implemented?

**Jimmy (Server Team Manager):**  
Normally, I would, but do you mind giving this one to Neal? He actually built the solution for us. We’re still getting used to the process.

**Neal (VM Security Analyst):**  
Sure, I can explain.  

Basically, the presence of insecure cipher suites and protocols means the system is capable of negotiating and using algorithms that are deprecated or considered insecure.  
If the system connects to a server that only supports these outdated protocols, it may still use them.  

These settings are controlled by Windows registry keys. The fix is fairly straightforward—we wrote a PowerShell script that disables insecure protocols and cipher suites, and enables only the secure, modern standards.

**Jack (Lead Systems Engineer):**  
That sounds good, but what if something goes wrong? Do we have a rollback plan in place? Did you even think about that?

**Neal (VM Security Analyst):**  
Yes, absolutely.  

We’re deploying this in phases: starting with a **pilot group**, then **pre-production**, and finally **production** systems.  
We’ve also created an automated rollback script for each remediation. It will fully restore the original registry settings in case any unexpected issues arise.

**Jack (Lead Systems Engineer):**  
That sounds solid. The fixes are just registry updates, so I’m not too concerned.

**Neal (VM Security Analyst):**  
Yep, exactly.

**Johnny (CAB Facilitator):**  
Any other questions from the group?  
Alright, that wraps things up for this week’s CAB meeting. See you all next week!

**Everyone:**  
See you later.

---
### Step 10 ) Remediation Effort

#### Remediation Round 1: Outdated Wireshark Removal

The server team used a PowerShell script to remove outdated Wireshark. A follow-up scan confirmed successful remediation.  
[Wireshark Removal Script](https://github.com/joshmadakor1/lognpacific-public/blob/main/automation/remediation-wireshark-uninstall.ps1)  

<img width="634" alt="image" src="https://github.com/user-attachments/assets/7b4f9ab2-d230-4458-ac0f-c0ff070ae79a">

[Scan 2 - Third Party Software Removal](https://drive.google.com/file/d/1MMzDVXxi2O2kYa4yus7wtH5UA0jFqzkj/view?usp=sharing)


#### Remediation Round 2: Insecure Protocols & Ciphers

The server team used PowerShell scripts to remediate insecure protocols and cipher suites. A follow-up scan verified successful remediation, and the results were saved for reference.  
[PowerShell: Insecure Protocols Remediation](https://github.com/joshmadakor1/lognpacific-public/blob/main/automation/toggle-protocols.ps1)
[PowerShell: Insecure Ciphers Remediation](https://github.com/joshmadakor1/lognpacific-public/blob/main/automation/toggle-cipher-suites.ps1)

<img width="630" alt="image" src="https://github.com/user-attachments/assets/0e96120d-8ec9-4f76-8e42-79c752200010">

[Scan 3 - Ciphersuites and Protocols](https://drive.google.com/file/d/1NjqVAAmNlKxHuhNUC3wrkNjtbWOpxXiU/view?usp=sharing)


#### Remediation Round 3: Guest Account Group Membership

The server team removed the guest account from the administrator group. A new scan confirmed remediation, and the results were exported for comparison.  
[PowerShell: Guest Account Group Membership Remediation](https://github.com/joshmadakor1/lognpacific-public/blob/main/automation/toggle-guest-local-administrators.ps1)  

<img width="627" alt="image" src="https://github.com/user-attachments/assets/870a3eac-3398-44fe-91c0-96f3c2578df4">

[Scan 4 - Guest Account Group Removal](https://drive.google.com/file/d/1UQ0cfTQ_aOhN-1qKPktau1TCvJxT2ziP/view?usp=sharing)


#### Remediation Round 4: Windows OS Updates

Windows updates were re-enabled and applied until the system was fully up to date. A final scan verified the changes  

<img width="627" alt="image" src="https://github.com/user-attachments/assets/870a3eac-3398-44fe-91c0-96f3c2578df4">

[Scan 5 - Post Windows Updates](https://drive.google.com/file/d/1E8vXg70Br6C7JACkpECfP8F-LpVco7S3/view?usp=sharing)

---

### First Cycle Remediation Effort Summary

The remediation process reduced total vulnerabilities by 80%, from 30 to 6. Critical vulnerabilities were resolved by the second scan (100%), and high vulnerabilities dropped by 90%. Mediums were reduced by 76%. In an actual production environment, asset criticality would further guide future remediation efforts.  

<img width="1920" alt="image" src="https://github.com/user-attachments/assets/51f0aae8-7f36-4d90-b29f-5257e57155f9">

[Remediation Data](https://docs.google.com/spreadsheets/d/1t2RPU4_D5qF5_WCH7434aEcRZZfQxDvaThsvjocWeAA/edit?usp=sharing)

---

### On-going Vulnerability Management (Maintenance Mode)

After completing the initial remediation cycle, the vulnerability management program transitions into **Maintenance Mode**. This phase ensures that vulnerabilities continue to be managed proactively, keeping systems secure over time. Regular scans, continuous monitoring, and timely remediation are crucial components of this phase. (See [Finalized Policy](https://docs.google.com/document/d/1A0Ct21u1E91W88OaWSNanmUNh2J9lzojN2QWYVdsy7k/edit?usp=sharing) for scanning and remediation cadence requirements.)

Key activities in Maintenance Mode include:
- **Scheduled Vulnerability Scans**: Perform regular scans (e.g., weekly or monthly) to detect new vulnerabilities as systems evolve.
- **Patch Management**: Continuously apply security patches and updates, ensuring no critical vulnerabilities remain unpatched.
- **Remediation Follow-ups**: Address newly identified vulnerabilities promptly, prioritizing based on risk and impact.
- **Policy Review and Updates**: Periodically review the Vulnerability Management Policy to ensure it aligns with the latest security best practices and organizational needs.
- **Audit and Compliance**: Conduct internal audits to ensure compliance with the vulnerability management policy and external regulations.
- **Ongoing Communication with Stakeholders**: Maintain open communication with teams responsible for remediation, ensuring efficient coordination.

By maintaining an active vulnerability management process, organizations can stay ahead of emerging threats and ensure long-term security resilience.
